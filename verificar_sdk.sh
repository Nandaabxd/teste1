#!/bin/bash
# Script para verificar se o SDK Manager foi corrigido adequadamente
# Executa verifica√ß√µes completas antes do build

echo "üîç VERIFICA√á√ÉO COMPLETA DO SDK MANAGER"
echo "=" * 50

# Definir caminhos
SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
NEW_SDK="$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
OLD_SDK="$SDK_ROOT/tools/bin/sdkmanager"

# Verificar se os diret√≥rios existem
echo "üìÅ Verificando estrutura de diret√≥rios..."
if [ -d "$SDK_ROOT" ]; then
    echo "‚úÖ SDK Root existe: $SDK_ROOT"
else
    echo "‚ùå SDK Root n√£o existe: $SDK_ROOT"
    exit 1
fi

# Verificar SDK Manager nos dois locais
echo "üîß Verificando SDK Manager..."
SDK_FOUND=false

if [ -f "$NEW_SDK" ]; then
    echo "‚úÖ SDK Manager (NOVO) encontrado: $NEW_SDK"
    if [ -x "$NEW_SDK" ]; then
        echo "‚úÖ SDK Manager (NOVO) √© execut√°vel"
        SDK_FOUND=true
    else
        echo "‚ö†Ô∏è SDK Manager (NOVO) n√£o √© execut√°vel"
    fi
else
    echo "‚ùå SDK Manager (NOVO) n√£o encontrado: $NEW_SDK"
fi

if [ -f "$OLD_SDK" ]; then
    echo "‚úÖ SDK Manager (ANTIGO) encontrado: $OLD_SDK"
    if [ -x "$OLD_SDK" ]; then
        echo "‚úÖ SDK Manager (ANTIGO) √© execut√°vel"
        SDK_FOUND=true
    else
        echo "‚ö†Ô∏è SDK Manager (ANTIGO) n√£o √© execut√°vel"
    fi
else
    echo "‚ùå SDK Manager (ANTIGO) n√£o encontrado: $OLD_SDK"
fi

if [ "$SDK_FOUND" = false ]; then
    echo "üí• ERRO: Nenhum SDK Manager funcional encontrado!"
    exit 1
fi

# Configurar ambiente
echo "üåç Configurando ambiente..."
export ANDROID_SDK_ROOT="$SDK_ROOT"
export ANDROID_HOME="$SDK_ROOT"
export PATH="$SDK_ROOT/cmdline-tools/latest/bin:$SDK_ROOT/tools/bin:$SDK_ROOT/platform-tools:$PATH"

echo "‚úÖ Vari√°veis de ambiente configuradas:"
echo "  ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
echo "  ANDROID_HOME: $ANDROID_HOME"
echo "  PATH atualizado: OK"

# Testar SDK Manager
echo "üß™ Testando SDK Manager..."
for SDK_PATH in "$NEW_SDK" "$OLD_SDK"; do
    if [ -f "$SDK_PATH" ]; then
        echo "üîç Testando: $SDK_PATH"
        if "$SDK_PATH" --version >/dev/null 2>&1; then
            VERSION=$("$SDK_PATH" --version 2>/dev/null | head -1)
            echo "‚úÖ SDK Manager funcional: $VERSION"
        else
            echo "‚ùå SDK Manager n√£o funcional: $SDK_PATH"
        fi
    fi
done

# Verificar licen√ßas
echo "üîë Verificando licen√ßas..."
LICENSES_DIR="$SDK_ROOT/licenses"
if [ -d "$LICENSES_DIR" ]; then
    echo "‚úÖ Diret√≥rio de licen√ßas existe: $LICENSES_DIR"
    LICENSE_COUNT=$(ls -1 "$LICENSES_DIR" 2>/dev/null | wc -l)
    echo "üìÑ Licen√ßas encontradas: $LICENSE_COUNT"
else
    echo "‚ùå Diret√≥rio de licen√ßas n√£o existe: $LICENSES_DIR"
fi

# Verificar componentes instalados
echo "üì± Verificando componentes instalados..."
COMPONENTS=(
    "platform-tools"
    "platforms/android-33"
    "build-tools/33.0.2"
)

for COMPONENT in "${COMPONENTS[@]}"; do
    COMPONENT_PATH="$SDK_ROOT/$COMPONENT"
    if [ -d "$COMPONENT_PATH" ]; then
        echo "‚úÖ Componente instalado: $COMPONENT"
    else
        echo "‚ùå Componente ausente: $COMPONENT"
    fi
done

# Verificar AIDL
echo "üîß Verificando AIDL..."
AIDL_PATHS=(
    "$SDK_ROOT/platform-tools/aidl"
    "$SDK_ROOT/build-tools/33.0.2/aidl"
)

AIDL_FOUND=false
for AIDL_PATH in "${AIDL_PATHS[@]}"; do
    if [ -f "$AIDL_PATH" ]; then
        echo "‚úÖ AIDL encontrado: $AIDL_PATH"
        AIDL_FOUND=true
        break
    fi
done

if [ "$AIDL_FOUND" = false ]; then
    echo "‚ö†Ô∏è AIDL n√£o encontrado, mas pode ser instalado durante o build"
fi

# Resumo final
echo "=" * 50
echo "üìã RESUMO DA VERIFICA√á√ÉO:"
echo "‚úÖ SDK Root: $SDK_ROOT"
echo "‚úÖ SDK Manager dispon√≠vel: $SDK_FOUND"
echo "‚úÖ Ambiente configurado: OK"
echo "‚úÖ Pronto para build: OK"
echo "=" * 50

exit 0
